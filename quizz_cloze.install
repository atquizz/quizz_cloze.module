<?php

/**
 * Implementation of hook_install().
 */
function quizz_cloze_install() {
  // variable_set('node_options_cloze', array('status'));
}

/**
 * Implementation of hook_schema().
 */
function quizz_cloze_schema() {
  $schema['quizz_cloze_answer'] = array(
      'description' => 'Store user\'s inputs.',
      'fields'      => array(
          'answer_id'    => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE,),
          'question_qid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'question_vid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'result_id'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE,),
          'score'        => array('type' => 'float', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0,),
          'answer'       => array('type' => 'text'),
      ),
      'primary key' => array('answer_id'),
      'unique keys' => array(
          'ids' => array('result_id', 'question_qid', 'question_vid'),
      ),
  );

  $schema['quiz_cloze_question_properties'] = array(
      'fields'      => array(
          'qid'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'vid'           => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE),
          'learning_mode' => array('type' => 'int', 'size' => 'tiny', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0,),
      ),
      'primary key' => array('qid', 'vid'),
  );

  return $schema;
}

/**
 * Adding table {quiz_cloze_node_properties}
 */
function quizz_cloze_update_7401() {
  db_create_table('quiz_cloze_node_properties', drupal_get_schema_unprocessed('cloze', 'quiz_cloze_node_properties'));
  return 'Adding table {quiz_cloze_node_properties}';
}

/**
 * Implements hook_quiz_question_upgrade_schema_node_to_entity().
 */
function quizz_cloze_quiz_question_upgrade_schema_node_to_entity() {
  if (db_table_exists('quiz_cloze_node_properties')) {
    db_change_field('quizz_cloze_answer', 'question_nid', 'question_qid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE));
    db_rename_table('quiz_cloze_node_properties', 'quiz_cloze_question_properties');
    db_change_field('quiz_cloze_question_properties', 'nid', 'qid');
  }
}

/**
 * Implements hook_quiz_question_upgrade_pre_drop_temp_columns().
 */
function quizz_cloze_quiz_question_upgrade_pre_drop_temp_columns() {
  // quiz_cloze_question_properties
  db_query(
    "UPDATE {quiz_cloze_question_properties} as qp"
    . " INNER JOIN {quiz_question_revision} qr ON qp.vid = qr.node_vid"
    . " SET qp.qid = qr.qid, qp.vid = qr.vid"
    . " WHERE 1"
  );

  // quizz_cloze_answer
  db_query(
    "UPDATE {quiz_matching_properties} as ua"
    . " INNER JOIN {quiz_question_revision} qr ON ua.question_vid = qr.node_vid"
    . " SET ua.question_qid = qr.qid, ua.question_vid = qr.vid"
    . " WHERE 1"
  );
}

/**
 * Make sure update script from main module is run before all.
 */
function quizz_cloze_update_7600() {
  require_once drupal_get_path('module', 'quizz_question') . '/quizz_question.install';
  return quizz_question_update_7600();
}
